# THIS FILE WAS AUTO-GENERATED | LOCAL CHANGES MAY BE OVERWRITTEN
# ansible template: roles/bash/templates/bashrc.j2

{% if not bash_zsh %}
# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

{% endif %}
PATH="$HOME/.local/bin:$HOME/bin:$PATH:$HOME/venv/bin"
export DONT_PROMPT_WSL_INSTALL=1

{% if bash_custom_prompt %}
__bash_prompt() {
    local userpart='`export XIT=$? \
        && [ "$XIT" -ne "0" ] && echo -n "\[\033[1;31m\]$XIT\[\033[0m\] " \
        && [ ! -z "${GITHUB_USER}" ] && echo -n "\[\033[0;32m\]@${GITHUB_USER} " || echo -n "\[\033[0;32m\]\u@\H " \
        && [ "$XIT" -ne "0" ] && echo -n "\[\033[1;31m\]➜" || echo -n "\[\033[0m\]➜"`'
    local gitbranch='`\
        if [ "$(git config --get devcontainers-theme.hide-status 2>/dev/null)" != 1 ] && [ "$(git config --get codespaces-theme.hide-status 2>/dev/null)" != 1 ]; then \
            export BRANCH=$(git --no-optional-locks symbolic-ref --short HEAD 2>/dev/null || git --no-optional-locks rev-parse --short HEAD 2>/dev/null); \
            if [ "${BRANCH}" != "" ]; then \
                echo -n "\[\033[0;36m\](\[\033[1;31m\]${BRANCH}" \
                && if [ "$(git config --get devcontainers-theme.show-dirty 2>/dev/null)" = 1 ] && \
                    git --no-optional-locks ls-files --error-unmatch -m --directory --no-empty-directory -o --exclude-standard ":/*" > /dev/null 2>&1; then \
                        echo -n " \[\033[1;33m\]✗"; \
                fi \
                && echo -n "\[\033[0;36m\]) "; \
            fi; \
        fi`'
    local lightblue='\[\033[1;34m\]'
    local removecolor='\[\033[0m\]'
    PS1="${userpart} ${lightblue}\w ${gitbranch}${removecolor}\n\$ "
    unset -f __bash_prompt
}
__bash_prompt
{% endif %}

# history options
{% for option in bash_history_options %}
{{ 'setopt' if bash_zsh else 'shopt -s' }} {{ option }}
{% endfor %}

{% if not bash_zsh %}
export HISTCONTROL="ignoreboth"
{% endif %}
export HISTTIMEFORMAT="{{ bash_history_time_format }}"
export HISTSIZE={{ bash_history_size }}
export HISTFILESIZE={{ bash_history_file_size }}

export EDITOR={{ bash_editor }}

export PAGER="{{ bash_pager }}"
export LIBVIRT_DEFAULT_URI='qemu:///system'

# setup LANG and LC_ALL
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

{% if bash_path_pre | length > 0 or bash_path_post | length > 0 %}
export PATH="{{ (bash_path_pre + ['$PATH'] + bash_path_post) | join(':') }}"

{% endif %}
{% if bash_exports %}
# begin local exports
{% for item in bash_exports | dictsort %}
export {{ item[0] }}='{{ item[1] }}'
{% endfor %}
# end local exports

{% endif %}
{% if bash_functions %}
# begin local functions
    {%- for item in bash_functions | dictsort %}

function {{ item[0] }} {
        {%- for line in item[1] %}

    {{ line }}
        {%- endfor %}

}
    {%- endfor %}

# end local functions
{% endif %}

{% if bash_aliases %}
# begin local aliases
    {%- for item in bash_aliases | dictsort %}

alias {{ item[0] }}={{ item[1] | quote }}
    {%- endfor %}

# end local aliases
{% endif %}

# func will show all defined shell function names (similar to alias)
{% if bash_zsh %}
alias func="print -l ${(ok)functions[(I)[^_]*]}"
{% else %}
alias func="declare -F | grep -v 'declare -f _' | awk '{print \$3}'"
{% endif %}

# tab-completion
{% if bash_zsh %}
autoload -Uz compinit && compinit
{% else %}
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
{% endif %}

{% if bash_sources | length > 0 %}
# begin source imports
    {%- for item in bash_sources %}
source {{ item }}
    {%- endfor %}
# end source imports

{% endif %}
# User specific aliases and functions
if [ -d ~/{{ bash_rc_file }}.d ]; then
    for rc in ~/{{ bash_rc_file }}.d/*; do
        if [ -f "$rc" ]; then
            . "$rc"
        fi
    done
fi
unset rc
