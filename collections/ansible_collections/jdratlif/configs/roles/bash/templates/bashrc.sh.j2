# THIS FILE WAS AUTO-GENERATED | LOCAL CHANGES MAY BE OVERWRITTEN
# ansible template: roles/bash/templates/bashrc.j2

{% if not bash_zsh %}
# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

{% endif %}
PATH="$HOME/.local/bin:$HOME/bin:$PATH:$HOME/venv/bin"
export DONT_PROMPT_WSL_INSTALL=1

{% if bash_custom_prompt %}
PROMPT_COMMAND=__bash_prompt

__bash_prompt() {
    local exit_code="$?"

    local RESET="\[\033[0m\]"
    local RED="\[\033[1;31m\]"
    local GREEN="\[\033[01;32m\]"
    local BLUE="\[\033[01;34m\]"
    local YELLOW="\[\033[01;33m\]"
    local CYAN="\[\033[00;36m\]"

    local branch=$(git --no-optional-locks symbolic-ref --short HEAD 2>/dev/null || git --no-optional-locks rev-parse --short HEAD 2>/dev/null)
    local git_branch=""
    test -z $branch || git_branch=" (${GREEN}${branch}${RESET})"

    local retval=""
    test $exit_code -ne 0 && retval="(${RED}${exit_code}${RESET}) "

    local venv=""
    test -z $VIRTUAL_ENV || venv="($(basename $VIRTUAL_ENV)) "

    PS1="${retval}${venv}${YELLOW}\u${RESET}@${YELLOW}\H${RESET}:${BLUE}\w${RESET}${git_branch}\n$ "
}
{% endif %}

# history options
{% for option in bash_history_options %}
{{ 'setopt' if bash_zsh else 'shopt -s' }} {{ option }}
{% endfor %}

{% if not bash_zsh %}
export HISTCONTROL="ignoreboth"
{% endif %}
export HISTTIMEFORMAT="{{ bash_history_time_format }}"
export HISTSIZE={{ bash_history_size }}
export HISTFILESIZE={{ bash_history_file_size }}

export EDITOR={{ bash_editor }}

export PAGER="{{ bash_pager }}"
export LIBVIRT_DEFAULT_URI='qemu:///system'

# setup LANG and LC_ALL
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

{% if bash_path_pre | length > 0 or bash_path_post | length > 0 %}
export PATH="{{ (bash_path_pre + ['$PATH'] + bash_path_post) | join(':') }}"

{% endif %}
{% if bash_exports %}
# begin local exports
{% for item in bash_exports | dictsort %}
export {{ item[0] }}='{{ item[1] }}'
{% endfor %}
# end local exports

{% endif %}
{% if bash_functions %}
# begin local functions
    {%- for item in bash_functions | dictsort %}

function {{ item[0] }} {
        {%- for line in item[1] %}

    {{ line }}
        {%- endfor %}

}
    {%- endfor %}

# end local functions
{% endif %}

{% if bash_aliases %}
# begin local aliases
    {%- for item in bash_aliases | dictsort %}

alias {{ item[0] }}={{ item[1] | quote }}
    {%- endfor %}

# end local aliases
{% endif %}

# func will show all defined shell function names (similar to alias)
{% if bash_zsh %}
alias func="print -l ${(ok)functions[(I)[^_]*]}"
{% else %}
alias func="declare -F | grep -v 'declare -f _' | awk '{print \$3}'"
{% endif %}

# tab-completion
{% if bash_zsh %}
autoload -Uz compinit && compinit
{% else %}
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
{% endif %}

{% if bash_sources | length > 0 %}
# begin source imports
    {%- for item in bash_sources %}
source {{ item }}
    {%- endfor %}
# end source imports

{% endif %}
# User specific aliases and functions
if [ -d ~/{{ bash_rc_file }}.d ]; then
    for rc in ~/{{ bash_rc_file }}.d/*; do
        if [ -f "$rc" ]; then
            . "$rc"
        fi
    done
fi
unset rc

BITWARDEN_SSH_AUTH_SOCK=$HOME/.var/app/com.bitwarden.desktop/data/.bitwarden-ssh-agent.sock
test -S "$BITWARDEN_SSH_AUTH_SOCK" && export SSH_AUTH_SOCK="$BITWARDEN_SSH_AUTH_SOCK"
