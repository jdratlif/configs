# Ansible Managed -- Changes will be overwritten

# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete refer

### Global definitions

set $mod {{ sway_modifier }}
set $file_manager {{ sway_file_manager }}
set $menu {{ sway_menu }}
set $term {{ sway_terminal }}

set $lock_timeout {{ sway_lock_timeout }}
set $screen_timeout {{ sway_screen_timeout }}

{% include 'snippets/monitors.j2' %}

{% for workspace in sway_workspaces %}
set $ws{{ loop.index }} {{ workspace }}
{% endfor %}

### global configuration

# remove window titlebars
default_border {{ sway_border }}

# window gaps
gaps inner {{ sway_gaps.inner }}
gaps outer {{ sway_gaps.outer }}

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/default.jxl fill

### input config

# touchpad config
# disable while typing / tap to touch / three finger middle click
input "type:touchpad" {
    dwt enabled
    tap enabled
    middle_emulation enabled
}

{% include 'snippets/numlock.j2' %}

# Workspaces
workspace $ws1 output "$mon1"
workspace $ws2 output "$mon1"
workspace $ws3 output "$mon1"
workspace $ws4 output "$mon1"
workspace $ws5 output "$mon1"
workspace $ws6 output "$mon2"
workspace $ws7 output "$mon2"
workspace $ws8 output "$mon2"
workspace $ws9 output "$mon2"
workspace $ws10 output "$mon2"

# Application Workspace Associations

# main left workspace (joplin/slack)
assign [app_id="^@joplin/app-desktop$"] $ws1
assign [app_id="^Slack$"] $ws1

# main right workspace (firefox/evolution)
assign [app_id="^org.mozilla.firefox$"] $ws6
assign [app_id="^org.gnome.Evolution$"] $ws6

# VS code
assign [app_id="^code$"] $ws7

# zoom
assign [class="^zoom$"] $ws10

# make 1password floating
for_window [class="^1Password$"] floating enable

# keep firefox/code dialogs in their own workspace
for_window [app_id="^(org.mozilla.firefox|code)$" floating] move container to workspace current

{# # enable clamshell mode
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always {{ config_home_dir }}/.local/bin/clamshell.sh #}

# setup dropdown terminal
set $ddterm-id dropdown-terminal
set $ddterm $term --class=$ddterm-id
set $ddterm-resize resize set 80ppt 80ppt, move position center

for_window [app_id="$ddterm-id"] {
    floating enable
    $ddterm-resize
    move to scratchpad
    scratchpad show
}

# (re)start terminal and toggle scratchpad
bindsym $mod+minus exec \
    swaymsg '[app_id="$ddterm-id"] scratchpad show' \
    || $ddterm && sleep 0.1 \
    && swaymsg '[app_id="$ddterm-id"] $ddterm-resize'

### Key bindings

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Switch workspaces or move active window to workspace
{% for n in range(1, 23) %}
    {%- if n < 10 %} {%- set keybind=n %} {%- elif n> 10 %}
        {%- set keybind = "F" ~ (n - 10) %}
    {%- else %}
        {%- set keybind = 0 %}
    {%- endif %}
    bindsym $mod+{{ keybind }} workspace "$ws{{ n }}"
    bindsym $mod+Shift+{{ keybind }} move container to workspace "$ws{{ n }}"
{% endfor %}

# launch file manager
bindsym $mod+e exec $file_manager

# change window split
bindsym $mod+h splith
bindsym $mod+v splitv

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
{# bindsym $mod+minus scratchpad show #}

# lock screen with mod+l
bindsym --release $mod+l exec loginctl lock-session

# Capture the currently active output to clipboard
bindsym Shift+Print exec grimshot copy output

# Capture the currently active window to clipboard
bindsym Shift+Alt+Print exec grimshot copy active

# Select and capture a custom rectangular area to clipboard
bindsym Shift+Ctrl+Print exec grimshot copy area

# Include configs from 3 locations:
# - /usr/share/sway/config.d
# - /etc/sway/config.d
# - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
# $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
